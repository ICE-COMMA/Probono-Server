# Generated by Django 4.0 on 2023-09-29 18:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_no', models.CharField(max_length=20)),
                ('route', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'bus',
            },
        ),
        migrations.CreateModel(
            name='CustomPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_demo', models.BooleanField(default=False)),
                ('custom_elevator', models.BooleanField(default=False)),
                ('custom_population', models.BooleanField(default=False)),
                ('custom_predict', models.BooleanField(default=False)),
                ('custom_safety', models.BooleanField(default=False)),
                ('custom_safety_loc', models.BooleanField(default=False)),
                ('custom_low_bus', models.BooleanField(default=False)),
                ('custom_festival', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('time', models.CharField(max_length=255)),
                ('amount', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'demo',
            },
        ),
        migrations.CreateModel(
            name='PopulRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CATEGORY', models.CharField(max_length=255)),
                ('NO', models.PositiveIntegerField()),
                ('AREA_CD', models.CharField(max_length=50, unique=True)),
                ('AREA_NM', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'popul_real_time_reg',
            },
        ),
        migrations.CreateModel(
            name='SafetyGuardHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
            ],
            options={
                'db_table': 'safety_guard_house',
            },
        ),
        migrations.CreateModel(
            name='SpecialWeather',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TM_EF', models.CharField(max_length=50)),
                ('REG_NM', models.CharField(max_length=100)),
                ('WRN', models.CharField(max_length=100)),
                ('LVL', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'special_weather',
            },
        ),
        migrations.CreateModel(
            name='SubwayElevator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_nm', models.CharField(max_length=255, verbose_name='Name')),
                ('x', models.FloatField(verbose_name='Longitude')),
                ('y', models.FloatField(verbose_name='Latitude')),
            ],
            options={
                'db_table': 'subway_elevator',
            },
        ),
        migrations.CreateModel(
            name='ProbonoUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('ID', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=10, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('impaired', models.CharField(blank=True, max_length=50, null=True)),
                ('custom', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='probono_app.custompreferences')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'ProbonoUser',
            },
        ),
    ]
